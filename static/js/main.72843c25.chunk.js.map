{"version":3,"sources":["components/sample-test-code/horizontal-card-1.js","components/sample-test-code/simple-card.js","components/sample-test-code/complexCard.js","components/sample-test-code/grid.js","components/paypal-example/verticalCard.js","components/paypal-example/horizontalCard.js","components/paypal-example/index.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","display","details","flexDirection","content","flex","cover","width","controls","alignItems","paddingLeft","spacing","paddingBottom","playIcon","height","MediaControlCard","classes","useTheme","Card","className","CardContent","Typography","component","variant","color","IconButton","aria-label","direction","CardMedia","image","title","minWidth","bullet","margin","transform","fontSize","pos","marginBottom","SimpleCard","bull","gutterBottom","CardActions","Button","size","flexGrow","paper","padding","maxWidth","img","maxHeight","ComplexGrid","Paper","style","border","Grid","container","item","ButtonBase","alt","src","xs","sm","cursor","AppGrid","justify","minHeight","textAlign","palette","text","secondary","VerticalCard","HorizonatalCard","background","CardPage","md","Array","map","x","App","state","hasError","error","info","this","setState","path","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","lifecycles","singleSpaReact","rootComponent","bootstrap","mount","unmount","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.72843c25.chunk.js","sourcesContent":["import React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport SkipNextIcon from '@material-ui/icons/SkipNext';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  details: {\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  content: {\n    flex: '1 0 auto',\n  },\n  cover: {\n    width: 151,\n  },\n  controls: {\n    display: 'flex',\n    alignItems: 'center',\n    paddingLeft: theme.spacing(1),\n    paddingBottom: theme.spacing(1),\n  },\n  playIcon: {\n    height: 38,\n    width: 38,\n  },\n}));\n\nexport default function MediaControlCard() {\n  const classes = useStyles();\n  const theme = useTheme();\n\n  return (\n    <Card className={classes.root}>\n      <div className={classes.details}>\n        <CardContent className={classes.content}>\n          <Typography component=\"h5\" variant=\"h5\">\n            Live From Space\n          </Typography>\n          <Typography variant=\"subtitle1\" color=\"textSecondary\">\n            Mac Miller\n          </Typography>\n        </CardContent>\n        <div className={classes.controls}>\n          <IconButton aria-label=\"previous\">\n            {theme.direction === 'rtl' ? <SkipNextIcon /> : <SkipPreviousIcon />}\n          </IconButton>\n          <IconButton aria-label=\"play/pause\">\n            <PlayArrowIcon className={classes.playIcon} />\n          </IconButton>\n          <IconButton aria-label=\"next\">\n            {theme.direction === 'rtl' ? <SkipPreviousIcon /> : <SkipNextIcon />}\n          </IconButton>\n        </div>\n      </div>\n      <CardMedia\n        className={classes.cover}\n        image=\"https://exclaim.ca/images/albumcovers.jpg\"\n        title=\"Live from space album cover\"\n      />\n    </Card>\n  );\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 275,\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)',\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n});\n\nexport default function SimpleCard() {\n  const classes = useStyles();\n  const bull = <span className={classes.bullet}>â€¢</span>;\n\n  return (\n    <Card className={classes.root}>\n      <CardContent>\n        <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n          Word of the Day\n        </Typography>\n        <Typography variant=\"h5\" component=\"h2\">\n          be{bull}nev{bull}o{bull}lent\n        </Typography>\n        <Typography className={classes.pos} color=\"textSecondary\">\n          adjective\n        </Typography>\n        <Typography variant=\"body2\" component=\"p\">\n          well meaning and kindly.\n          <br />\n          {'\"a benevolent smile\"'}\n        </Typography>\n      </CardContent>\n      <CardActions>\n        <Button size=\"small\">Learn More</Button>\n      </CardActions>\n    </Card>\n  );\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport ButtonBase from '@material-ui/core/ButtonBase';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    margin: 'auto',\n    maxWidth: 500,\n  },\n  image: {\n    width: 128,\n    height: 128,\n  },\n  img: {\n    margin: 'auto',\n    display: 'block',\n    maxWidth: '100%',\n    maxHeight: '100%',\n  },\n}));\n\nexport default function ComplexGrid() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <Paper style={{border:\"solid yellow 1px\"}} className={classes.paper}>\n        <Grid style={{border:\"solid red 1px\"}} container spacing={2}>\n          <Grid style={{border:\"solid red 1px\"}} item>\n            <ButtonBase className={classes.image}>\n              <img className={classes.img} alt=\"complex\" src=\"/static/images/grid/complex.jpg\" />\n            </ButtonBase>\n          </Grid>\n          <Grid style={{border:\"solid blue 2px\"}} item xs={12} sm container>\n            <Grid style={{border:\"solid red 1px\"}} item xs container direction=\"column\" spacing={2}>\n              <Grid style={{border:\"solid green 1px\"}} item xs>\n                <Typography gutterBottom variant=\"subtitle1\">\n                  Standard license\n                </Typography>\n                <Typography variant=\"body2\" gutterBottom>\n                  Full resolution 1920x1080 â€¢ JPEG\n                </Typography>\n                <Typography variant=\"body2\" color=\"textSecondary\">\n                  ID: 1030114\n                </Typography>\n              </Grid>\n              <Grid  item>\n                <Typography variant=\"body2\" style={{ cursor: 'pointer' }}>\n                  Remove\n                </Typography>\n              </Grid>\n            </Grid>\n            <Grid style={{border:\"solid black 1px\"}} item>\n              <Typography variant=\"subtitle1\">$19.00</Typography>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Paper>\n    </div>\n  );\n}","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport HorizonatalCard1 from './horizontal-card-1';\nimport SimpleCard from './simple-card';\nimport ComplexCard from './complexCard';\n\nexport const AppGrid = () => {\n  return (\n    <div className=\"app-grid\">\n      <Grid\n        container\n        direction=\"row\"\n        justify=\"flex-start\"\n        alignItems=\"flex-start\"\n        spacing={10}\n      >\n        <Grid item>\n          <HorizonatalCard1 />\n        </Grid>\n        <Grid\n          item\n          style={{\n            'align-self': 'flex-end',\n          }}\n        >\n          <SimpleCard />\n        </Grid>\n      </Grid>\n      {/* <Grid container>\n        <Grid item>\n          <HorizonatalCard1 />\n        </Grid>\n        <Grid item>\n          <SimpleCard />\n        </Grid>\n        <Grid item>\n          <SimpleCard />\n        </Grid>\n      </Grid> */}\n      <ComplexCard />\n    </div>\n  );\n};\n","import { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport React from 'react';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    minHeight: '350px',\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n}));\n\nexport const VerticalCard = () => {\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.paper}>Content for Card Goes here</Paper>\n    </div>\n  );\n};\n","import { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport React from 'react';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    minHeight: '200px',\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n}));\n\nexport const HorizonatalCard = () => {\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.paper}>Content for Card Goes here</Paper>\n    </div>\n  );\n};\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { VerticalCard } from './verticalCard';\nimport { HorizonatalCard } from './horizontalCard';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    background: '#E0FFFF',\n    padding: '40px', // One possible fix for the spacing props is to have padding on partent equal or more than child's padding. (This will change based on Parent Grid width)\n    // overflow: 'hidden', /// This is hacky to account for childs extra padding applied by material UI spacing props. (Another easy fix)\n  },\n}));\n\nexport const CardPage = () => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={3}>\n        <Grid item xs={12} md={3}>\n          <Grid container spacing={10} direction=\"column\">\n            {[...Array(2)].map((x) => (\n              <Grid item>\n                <VerticalCard />\n              </Grid>\n            ))}\n          </Grid>\n        </Grid>\n        <Grid item xs={12} md={9}>\n          <Grid container spacing={10} direction=\"column\">\n            {[...Array(3)].map((x) => (\n              <Grid item>\n                <HorizonatalCard />\n              </Grid>\n            ))}\n          </Grid>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n","import React from 'react';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport './App.css';\nimport { AppGrid } from './components/sample-test-code/grid';\nimport { CardPage } from './components/paypal-example';\n\nclass App extends React.Component {\n  state = {\n    hasError: false,\n  };\n\n  componentDidCatch(error, info) {\n    this.setState({ hasError: true });\n  }\n\n  render() {\n    return this.state.hasError ? (\n      <div>Error</div>\n    ) : (\n      <div className=\"Grid-App\">\n        <BrowserRouter>\n          <Route path=\"/grid\" component={AppGrid} />\n          <Route path=\"/\" component={CardPage} />\n        </BrowserRouter>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport singleSpaReact from 'single-spa-react';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nconst lifecycles = singleSpaReact({\n  React,\n  ReactDOM,\n  rootComponent: App,\n});\n\nexport const bootstrap = lifecycles.bootstrap;\nexport const mount = lifecycles.mount;\nexport const unmount = lifecycles.unmount;\n\n// function domElementGetter() {\n//   return document.getElementById('root');\n// }\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}